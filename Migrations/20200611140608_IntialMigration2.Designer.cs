// <auto-generated />
using System;
using CuisineOrdersAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CuisineOrdersAPI.Migrations
{
    [DbContext(typeof(CuisineOrderContext))]
    [Migration("20200611140608_IntialMigration2")]
    partial class IntialMigration2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CuisineOrdersAPI.Models.OnlineOrderHeader", b =>
                {
                    b.Property<int>("OnlineOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("OnlineOrderID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppOrderId")
                        .HasColumnName("AppOrderID")
                        .HasColumnType("int");

                    b.Property<decimal?>("CartTax")
                        .HasColumnType("money");

                    b.Property<decimal?>("CartTotal")
                        .HasColumnType("money");

                    b.Property<string>("CreatedVia")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CuisineOrderStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("('Not Processed')")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Currency")
                        .HasColumnType("char(3)")
                        .IsFixedLength(true)
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CustomerEmail")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomerEmployeeNo")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomerFirstName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("CustomerId")
                        .HasColumnName("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerLastName")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CustomerNotes")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("CustomerPhone")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DatePaid")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("DiscountTax")
                        .HasColumnType("money");

                    b.Property<decimal?>("DiscountTotal")
                        .HasColumnType("money");

                    b.Property<string>("OrderKey")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("OrderLinesSaved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<int?>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("OrderUrl")
                        .HasColumnName("OrderURL")
                        .HasColumnType("varchar(500)")
                        .HasMaxLength(500)
                        .IsUnicode(false);

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<bool?>("PriceIncludesTax")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("TransactionId")
                        .HasColumnName("TransactionID")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("OnlineOrderId");

                    b.ToTable("OnlineOrderHeader");
                });

            modelBuilder.Entity("CuisineOrdersAPI.Models.OnlineOrderLines", b =>
                {
                    b.Property<int>("OnlineOrderLineId")
                        .HasColumnName("OnlineOrderLineID")
                        .HasColumnType("int");

                    b.Property<int?>("AppOrderId")
                        .HasColumnName("AppOrderID")
                        .HasColumnType("int");

                    b.Property<int>("AppOrderLineId")
                        .HasColumnName("AppOrderLineID")
                        .HasColumnType("int");

                    b.Property<string>("Category")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<int?>("OnlineOrderHeaderId")
                        .HasColumnName("OnlineOrderHeaderID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductDescription")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnName("SKU")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("money");

                    b.Property<decimal?>("SubTotalTax")
                        .HasColumnType("money");

                    b.HasKey("OnlineOrderLineId");

                    b.ToTable("OnlineOrderLines");
                });
#pragma warning restore 612, 618
        }
    }
}
